<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= appSettings.companyHeader %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link href="/css/admin-mobile.css" rel="stylesheet">
    <style>
        body { background-color: #f8f9fa; font-family: 'Segoe UI', sans-serif; }
        .main-content { min-height: 100vh; }
        .card { border: none; border-radius: 15px; box-shadow: 0 2px 15px rgba(0,0,0,0.1); }
        .card-header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 15px 15px 0 0 !important; font-weight: 600; }
        .table thead th { background: #f8f9fa; border-bottom: 2px solid #dee2e6; }
        .badge { font-size: 0.8rem; padding: 0.5em 0.75em; }
        .form-control, .form-select { border-radius: 8px; }
        .pagination .page-link { border-radius: 8px; margin: 0 2px; color: #667eea; }
        .pagination .page-item.active .page-link { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-color: #667eea; }
        .loading-overlay { position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(255, 255, 255, 0.7); z-index: 10; display: flex; align-items: center; justify-content: center; border-radius: 15px; }
        .stat-card .h4 { font-weight: 700; }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <%- include('../../partials/billing-sidebar') %>

            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2"><i class="bx bx-receipt"></i> Todas as Faturas</h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <a href="/admin/billing/invoices" class="btn btn-sm btn-primary"><i class="bx bx-plus"></i> Criar Fatura</a>
                    </div>
                </div>

                <!-- Cartões de Resumo -->
                <div id="summary-cards" class="row mb-4">
                    <!-- Os cartões serão preenchidos dinamicamente -->
                </div>

                <!-- Filtros -->
                <div class="card mb-4">
                    <div class="card-header"><h5 class="mb-0"><i class="bx bx-filter"></i> Filtros e Busca</h5></div>
                    <div class="card-body">
                        <form id="filterForm" class="row g-3">
                            <div class="col-md-3">
                                <label class="form-label">Status</label>
                                <select name="status" class="form-select">
                                    <option value="">Todos</option>
                                    <option value="pending">Pendente</option>
                                    <option value="paid">Paga</option>
                                    <option value="overdue">Vencida</option>
                                    <option value="cancelled">Cancelada</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Tipo</label>
                                <select name="type" class="form-select">
                                    <option value="">Todos</option>
                                    <option value="monthly">Mensal</option>
                                    <option value="voucher">Voucher</option>
                                    <option value="manual">Manual</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Username do Cliente</label>
                                <input type="text" name="customer_username" class="form-control" placeholder="Digite o username...">
                            </div>
                            <div class="col-md-2 d-grid">
                                <label class="form-label">&nbsp;</label>
                                <button type="submit" class="btn btn-primary"><i class="bx bx-search"></i> Buscar</button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Tabela de Faturas -->
                <div class="card position-relative">
                    <div id="loading" class="loading-overlay" style="display: none;"><div class="spinner-border text-primary" role="status"></div></div>
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="bx bx-list-ul"></i> Lista de Faturas</h5>
                        <div id="table-info"></div>
                    </div>
                    <div class="card-body">
                        <div id="invoice-table-container" class="table-responsive"></div>
                        <div id="pagination-container" class="d-flex justify-content-center mt-3"></div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const filterForm = document.getElementById('filterForm');
            const loadingOverlay = document.getElementById('loading');
            let currentPage = 1;

            async function fetchInvoices(page = 1) {
                loadingOverlay.style.display = 'flex';
                currentPage = page;

                const formData = new FormData(filterForm);
                const params = new URLSearchParams(formData);
                params.set('page', page);

                try {
                    const response = await fetch(`/admin/billing/api/invoice-list?${params.toString()}`);
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    
                    const result = await response.json();
                    if (!result.success) throw new Error(result.message || 'Falha ao carregar os dados.');

                    updateSummaryCards(result.data.stats);
                    updateInvoiceTable(result.data.invoices);
                    updatePagination(result.data.pagination);
                    updateTableInfo(result.data.pagination);

                } catch (error) {
                    console.error('Erro ao buscar faturas:', error);
                    document.getElementById('invoice-table-container').innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                } finally {
                    loadingOverlay.style.display = 'none';
                }
            }

            function updateSummaryCards(stats) {
                const container = document.getElementById('summary-cards');
                container.innerHTML = `
                    <div class="col-md-3"><div class="card text-center p-3 stat-card"><div class="h4 text-primary">${stats.total}</div><div class="text-muted">Total</div></div></div>
                    <div class="col-md-3"><div class="card text-center p-3 stat-card"><div class="h4 text-success">${stats.paid}</div><div class="text-muted">Pagas</div></div></div>
                    <div class="col-md-3"><div class="card text-center p-3 stat-card"><div class="h4 text-warning">${stats.pending}</div><div class="text-muted">Pendentes</div></div></div>
                    <div class="col-md-3"><div class="card text-center p-3 stat-card"><div class="h4 text-danger">${stats.overdue}</div><div class="text-muted">Vencidas</div></div></div>
                `;
            }

            function updateInvoiceTable(invoices) {
                const container = document.getElementById('invoice-table-container');
                if (invoices.length === 0) {
                    container.innerHTML = `<div class="text-center py-5"><i class="bx bx-info-circle fs-1 text-muted"></i><h5 class="mt-3">Nenhuma fatura encontrada.</h5><p class="text-muted">Tente ajustar seus filtros.</p></div>`;
                    return;
                }

                const table = document.createElement('table');
                table.className = 'table table-hover';
                table.innerHTML = `
                    <thead>
                        <tr>
                            <th>Fatura #</th><th>Cliente</th><th>Plano</th><th>Valor</th><th>Status</th><th>Tipo</th><th>Vencimento</th><th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${invoices.map(invoice => `
                            <tr>
                                <td><strong>#${invoice.invoice_number}</strong></td>
                                <td>${invoice.customer_name}<br><small class="text-muted">@${invoice.username}</small></td>
                                <td><span class="badge bg-info">${invoice.package_name || 'N/A'}</span></td>
                                <td><strong>R$ ${invoice.amount.toLocaleString('pt-BR')}</strong></td>
                                <td><span class="badge bg-${getStatusColor(invoice.status)}">${invoice.status}</span></td>
                                <td><span class="badge bg-secondary">${invoice.invoice_type || 'N/A'}</span></td>
                                <td>${new Date(invoice.due_date).toLocaleDateString('pt-BR')}</td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a href="/admin/billing/invoices/${invoice.id}" class="btn btn-outline-primary" title="Ver"><i class="bx bx-show"></i></a>
                                        <a href="/admin/billing/invoices/${invoice.id}/edit" class="btn btn-outline-warning" title="Editar"><i class="bx bx-edit"></i></a>
                                        <a href="/admin/billing/invoices/${invoice.id}/print" class="btn btn-outline-info" title="Imprimir" target="_blank"><i class="bx bx-printer"></i></a>
                                    </div>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>`;
                container.innerHTML = '';
                container.appendChild(table);
            }

            function updatePagination(pagination) {
                const container = document.getElementById('pagination-container');
                if (pagination.totalPages <= 1) {
                    container.innerHTML = '';
                    return;
                }
                let html = '<ul class="pagination">';
                // Previous
                html += `<li class="page-item ${pagination.currentPage === 1 ? 'disabled' : ''}"><a class="page-link" href="#" data-page="${pagination.currentPage - 1}">Anterior</a></li>`;
                // Pages
                for (let i = 1; i <= pagination.totalPages; i++) {
                    html += `<li class="page-item ${i === pagination.currentPage ? 'active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
                }
                // Next
                html += `<li class="page-item ${pagination.currentPage === pagination.totalPages ? 'disabled' : ''}"><a class="page-link" href="#" data-page="${pagination.currentPage + 1}">Próxima</a></li>`;
                html += '</ul>';
                container.innerHTML = html;
            }
            
            function updateTableInfo(pagination) {
                document.getElementById('table-info').innerHTML = `<span class="badge bg-light text-dark">Página ${pagination.currentPage} de ${pagination.totalPages}</span>`;
            }

            function getStatusColor(status) {
                switch(status) {
                    case 'paid': return 'success';
                    case 'overdue': return 'danger';
                    case 'pending': return 'warning';
                    default: return 'secondary';
                }
            }

            // Event Listeners
            filterForm.addEventListener('submit', e => {
                e.preventDefault();
                fetchInvoices(1);
            });

            document.getElementById('pagination-container').addEventListener('click', e => {
                if (e.target.tagName === 'A' && e.target.dataset.page) {
                    e.preventDefault();
                    fetchInvoices(parseInt(e.target.dataset.page));
                }
            });

            // Carregamento Inicial
            fetchInvoices(currentPage);
        });
    </script>
</body>
</html>
