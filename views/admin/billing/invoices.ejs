<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciar Faturas - Portal do Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <!-- Otimizações para Admin Mobile -->
    <link href="/css/admin-mobile.css" rel="stylesheet">
    <style>
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            min-width: 300px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <%- include('../../partials/billing-sidebar') %>

            <!-- Conteúdo Principal -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">
                        <i class="bx bx-receipt"></i> Gerenciar Faturas
                    </h1>
                    <div class="d-flex gap-2">
                        <button id="bulkDeleteBtn" class="btn btn-danger" disabled>
                            <i class="bx bx-trash"></i> Excluir Selecionadas
                        </button>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addInvoiceModal">
                            <i class="bx bx-plus"></i> Criar Fatura
                        </button>
                    </div>
                </div>

                <!-- Tabela de Faturas -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bx bx-list-ul"></i> Lista de Faturas
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="invoicesTable" class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th style="width:36px;">
                                            <input type="checkbox" id="selectAllInvoices" />
                                        </th>
                                        <th>Nº da Fatura</th>
                                        <th>Cliente</th>
                                        <th>Plano</th>
                                        <th>Valor</th>
                                        <th>Status</th>
                                        <th>Vencimento</th>
                                        <th>Data de Criação</th>
                                        <th>Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (invoices && invoices.length > 0) { %>
                                        <% invoices.forEach(function(invoice) { %>
                                            <tr>
                                                <td>
                                                    <input type="checkbox" class="invoice-checkbox" value="<%= invoice.id %>" />
                                                </td>
                                                <td>
                                                    <span class="text-body fw-bold"><%= invoice.invoice_number %></span>
                                                </td>
                                                <td>
                                                    <span class="text-body fw-bold"><%= invoice.customer_name %></span>
                                                    <br>
                                                    <small class="text-muted"><%= invoice.customer_phone %></small>
                                                </td>
                                                <td><%= invoice.package_name %></td>
                                                <td class="currency-format" data-amount="<%= invoice.amount %>">
                                                    R$ <%= Math.round(parseFloat(invoice.amount)).toLocaleString('pt-BR') %>
                                                </td>
                                                <td>
                                                    <% if (invoice.status === 'paid') { %>
                                                        <span class="badge bg-success">Paga</span>
                                                    <% } else if (invoice.status === 'unpaid') { %>
                                                        <% if (new Date(invoice.due_date) < new Date()) { %>
                                                            <span class="badge bg-danger">Atrasada</span>
                                                        <% } else { %>
                                                            <span class="badge bg-warning">Não Paga</span>
                                                        <% } %>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <% if (new Date(invoice.due_date) < new Date() && invoice.status === 'unpaid') { %>
                                                        <span class="text-danger">
                                                            <%= new Date(invoice.due_date).toLocaleDateString('pt-BR') %>
                                                        </span>
                                                    <% } else { %>
                                                        <%= new Date(invoice.due_date).toLocaleDateString('pt-BR') %>
                                                    <% } %>
                                                </td>
                                                <td><%= new Date(invoice.created_at).toLocaleDateString('pt-BR') %></td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <a href="/admin/billing/invoices/<%= invoice.id %>" class="btn btn-sm btn-primary">
                                                            <i class="bx bx-show"></i>
                                                        </a>
                                                        <% if (invoice.status === 'unpaid') { %>
                                                            <button class="btn btn-sm btn-success" onclick="markAsPaid('<%= invoice.id %>')">
                                                                <i class="bx bx-check"></i>
                                                            </button>
                                                        <% } %>
                                                        <a href="/admin/billing/invoices/<%= invoice.id %>/print" target="_blank" class="btn btn-sm btn-info">
                                                            <i class="bx bx-printer"></i>
                                                        </a>
                                                        <button class="btn btn-sm btn-danger" onclick="deleteInvoice('<%= invoice.id %>')">
                                                            <i class="bx bx-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Modal Adicionar Fatura -->
    <div class="modal fade" id="addInvoiceModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Criar Nova Fatura</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addInvoiceForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="customer_id" class="form-label">Cliente</label>
                            <select class="form-control" id="customer_id" name="customer_id" required>
                                <option value="">Selecione um Cliente</option>
                                <% if (customers && customers.length > 0) { %>
                                    <% customers.forEach(function(customer) { %>
                                        <option value="<%= customer.id %>">
                                            <%= customer.name %> (<%= customer.phone %>)
                                        </option>
                                    <% }); %>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="package_id" class="form-label">Plano</label>
                            <select class="form-control" id="package_id" name="package_id" required>
                                <option value="">Selecione um Plano</option>
                                <% if (packages && packages.length > 0) { %>
                                    <% packages.forEach(function(package) { %>
                                        <option value="<%= package.id %>" 
                                                data-price="<%= package.price %>"
                                                data-tax-rate="<%= package.tax_rate !== null && package.tax_rate !== undefined ? package.tax_rate : 11.00 %>">
                                            <%= package.name %> - R$ <%= Math.round(parseFloat(package.price)).toLocaleString('pt-BR') %>
                                            <% if (package.tax_rate === 0) { %>
                                                (Sem Impostos)
                                            <% } else if (package.tax_rate) { %>
                                                (Imposto <%= package.tax_rate.toFixed(2) %>%)
                                            <% } else { %>
                                                (Imposto 11.00%)
                                            <% } %>
                                        </option>
                                    <% }); %>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="base_amount" class="form-label">Preço Base (Antes dos Impostos)</label>
                            <input type="number" class="form-control" id="base_amount" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="tax_rate_display" class="form-label">Imposto</label>
                            <input type="text" class="form-control" id="tax_rate_display" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="amount" class="form-label">Valor (Depois dos Impostos)</label>
                            <input type="number" class="form-control" id="amount" name="amount" required>
                        </div>
                        <!-- Campos ocultos para dados de imposto -->
                        <input type="hidden" id="base_amount_hidden" name="base_amount">
                        <input type="hidden" id="tax_rate_hidden" name="tax_rate">
                        <div class="mb-3">
                            <label for="due_date" class="form-label">Vencimento</label>
                            <input type="date" class="form-control" id="due_date" name="due_date" required>
                        </div>
                        <div class="mb-3">
                            <label for="notes" class="form-label">Descrição</label>
                            <textarea class="form-control" id="notes" name="notes" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Criar Fatura</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#invoicesTable').DataTable({
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/pt-BR.json',
                },
                pageLength: 25,
                lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]]
            });

            // Preencher automaticamente o valor quando o plano é selecionado
            $('#package_id').on('change', function() {
                const selectedOption = $(this).find('option:selected');
                const price = parseFloat(selectedOption.data('price')) || 0;
                const taxRate = parseFloat(selectedOption.data('tax-rate')) || 0;
                
                $('#base_amount').val(price);
                
                if (taxRate === 0) {
                    $('#tax_rate_display').val('0% (Sem Impostos)');
                    $('#amount').val(price); // Nenhum imposto adicionado
                } else {
                    $('#tax_rate_display').val(`${taxRate}%`);
                    const amount = price * (1 + taxRate / 100);
                    $('#amount').val(Math.round(amount));
                }
                
                $('#base_amount_hidden').val(price);
                $('#tax_rate_hidden').val(taxRate);
            });

            // Definir data de vencimento padrão para 30 dias a partir de agora
            const today = new Date();
            const dueDate = new Date(today.getTime() + (30 * 24 * 60 * 60 * 1000));
            $('#due_date').val(dueDate.toISOString().split('T')[0]);
        });

        // Formulário para Adicionar Fatura
        $('#addInvoiceForm').on('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const urlParams = new URLSearchParams();
            for (const [key, value] of formData.entries()) {
                urlParams.append(key, value);
            }
            
            const $btn = $(this).find('button[type="submit"]');
            const originalText = $btn.html();
            $btn.prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Processando...');
            
            fetch('/admin/billing/invoices', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
                body: urlParams.toString()
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('success', 'Fatura Criada', 'A fatura foi criada com sucesso');
                    $('#addInvoiceModal').modal('hide');
                    setTimeout(() => {
                        location.reload();
                    }, 1500);
                } else {
                    showToast('error', 'Falha ao Criar', data.message || 'Não foi possível criar a fatura');
                }
            })
            .catch(error => {
                console.error('Erro:', error);
                showToast('error', 'Erro', 'Ocorreu um erro ao criar a fatura');
            })
            .finally(() => {
                $btn.prop('disabled', false).html(originalText);
            });
        });

        // Exclusão em Massa de Faturas Selecionadas
        (function initBulkDelete(){
            const bulkBtn = document.getElementById('bulkDeleteBtn');
            const selectAll = document.getElementById('selectAllInvoices');

            const getChecks = () => Array.from(document.querySelectorAll('.invoice-checkbox'));
            const getSelected = () => getChecks().filter(c => c.checked).map(c => parseInt(c.value, 10));

            function updateBulkState() {
                const selected = getSelected();
                bulkBtn.disabled = selected.length === 0;
                const checks = getChecks();
                if (checks.length) {
                    const allChecked = checks.every(c => c.checked);
                    const someChecked = checks.some(c => c.checked);
                    selectAll.checked = allChecked;
                    selectAll.indeterminate = !allChecked && someChecked;
                }
            }

            if (selectAll) {
                selectAll.addEventListener('change', () => {
                    const checked = selectAll.checked;
                    getChecks().forEach(c => { c.checked = checked; });
                    updateBulkState();
                });
            }

            getChecks().forEach(c => c.addEventListener('change', updateBulkState));
            updateBulkState();

            bulkBtn.addEventListener('click', async () => {
                const ids = getSelected();
                if (!ids.length) return;
                if (!confirm(`Excluir ${ids.length} faturas selecionadas?`)) return;
                showToast('info', 'Processando...', 'Excluindo faturas selecionadas');
                try {
                    const resp = await fetch('/admin/billing/invoices/bulk-delete', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ ids })
                    });
                    const ct = resp.headers.get('content-type') || '';
                    let data;
                    if (ct.includes('application/json')) {
                        data = await resp.json();
                    } else {
                        const text = await resp.text();
                        throw new Error(text?.slice(0, 200) || 'Resposta inválida do servidor');
                    }
                    if (!resp.ok || !data?.success) throw new Error(data?.message || 'Falha na exclusão em massa');
                    showToast('success', 'Concluído', `Sucesso ao excluir ${data.summary.success} de ${data.summary.total} faturas`);
                    setTimeout(() => location.reload(), 1200);
                } catch (e) {
                    console.error(e);
                    showToast('error', 'Falha', e.message || 'Ocorreu um erro na exclusão em massa');
                }
            });
        })();

        // Marcar como Paga
        function markAsPaid(invoiceId) {
            if (confirm('Marcar esta fatura como paga?')) {
                showToast('info', 'Processando...', 'Marcando fatura como paga');
                
                fetch(`/admin/billing/api/invoices/${invoiceId}`)
                .then(response => response.json())
                .then(inv => {
                    if (!inv || !inv.success || !inv.invoice) {
                        throw new Error(inv?.message || 'Falha ao obter dados da fatura');
                    }
                    const amount = parseFloat(inv.invoice.amount);
                    return fetch('/admin/billing/payments', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            invoice_id: invoiceId,
                            amount: amount,
                            payment_method: 'manual_admin',
                            reference_number: '',
                            notes: ''
                        })
                    });
                })
                .then(response => response.json())
                .then(result => {
                    if (!result || !result.success) {
                        throw new Error(result?.message || 'Falha ao marcar fatura como paga');
                    }
                    showToast('success', 'Fatura Paga', 'A fatura foi marcada como paga com sucesso');
                    setTimeout(() => { location.reload(); }, 1500);
                })
                .catch(error => {
                    console.error('Erro:', error);
                    showToast('error', 'Erro', error?.message || 'Ocorreu um erro ao marcar a fatura');
                });
            }
        }

        // Excluir Fatura
        function deleteInvoice(invoiceId) {
            if (confirm('Você tem certeza que deseja excluir esta fatura?')) {
                showToast('info', 'Processando...', 'Excluindo fatura');
                
                fetch(`/admin/billing/invoices/${invoiceId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('success', 'Fatura Excluída', 'A fatura foi excluída com sucesso');
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        showToast('error', 'Falha ao Excluir', data.message || 'Não foi possível excluir a fatura');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    showToast('error', 'Erro', 'Ocorreu um erro ao excluir a fatura');
                });
            }
        }

        // Container de Toast
        const toastContainer = document.createElement('div');
        toastContainer.id = 'toast-container';
        document.body.appendChild(toastContainer);

        function showToast(type, title, message, duration = 5000) {
            const toastId = 'toast-' + Date.now();
            const iconClass = type === 'success' ? 'bi-check-circle' : type === 'error' ? 'bi-x-circle' : 'bi-info-circle';
            const bgClass = type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-primary';
            
            const toastHtml = `
                <div id="${toastId}" class="toast align-items-center text-white ${bgClass} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi ${iconClass} me-2"></i>
                            <strong>${title}</strong><br>
                            <small>${message}</small>
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            $('#toast-container').append(toastHtml);
            const toastElement = document.getElementById(toastId);
            const toast = new bootstrap.Toast(toastElement, { delay: duration });
            toast.show();
            
            toastElement.addEventListener('hidden.bs.toast', () => {
                toastElement.remove();
            });
        }
    </script>
    
    <%- include('../../partials/currency-helper') %>

    <!-- Navegação Inferior para Mobile -->
    <nav class="bottom-nav d-md-none">
        <a class="nav-item" href="/admin/billing/mobile/customers">
            <i class="bi bi-people"></i>
            <span>Clientes</span>
        </a>
        <a class="nav-item active" href="/admin/billing/mobile/invoices">
            <i class="bi bi-receipt"></i>
            <span>Faturas</span>
        </a>
        <a class="nav-item home-button" href="/admin/billing/mobile">
            <i class="bi bi-house"></i>
            <span>Início</span>
        </a>
        <a class="nav-item" href="/admin/billing/mobile/payments">
            <i class="bi bi-credit-card"></i>
            <span>Pagar</span>
        </a>
        <a class="nav-item" href="/admin/billing/mobile/map">
            <i class="bi bi-geo-alt"></i>
            <span>Mapa</span>
        </a>
    </nav>

    <style>
        .bottom-nav{position:fixed;bottom:0;left:0;right:0;background:linear-gradient(180deg,rgba(11,20,55,0.96),rgba(15,28,79,0.96));border-top:1px solid rgba(255,255,255,0.08);height:70px;display:grid;grid-template-columns:1fr 1fr 1.5fr 1fr 1fr;z-index:1000;backdrop-filter:blur(10px);padding:8px 0;}
        .nav-item{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:4px;color:white;text-decoration:none;transition:all 0.3s ease;}
        .nav-item:hover{color:#4cc9f0;transform:translateY(-2px);}
        .nav-item.active{color:#4cc9f0;}
        .nav-item.home-button{background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);border-radius:50%;width:56px;height:56px;margin:-8px auto 0 auto;box-shadow:0 4px 15px rgba(102, 126, 234, 0.4);transform:translateY(-4px);border:2px solid rgba(255,255,255,0.2);position:relative;overflow:hidden;}
        .nav-item.home-button:hover{transform:translateY(-6px);box-shadow:0 6px 20px rgba(102, 126, 234, 0.6);}
        .nav-item.home-button.active{color:white;}
        body{padding-bottom:80px;}
        @media(min-width:768px){.bottom-nav{display:none;}body{padding-bottom:0;}}
    </style>

    <%- include('../../partials/admin-mobile-navbar', { currentPage: 'invoices' }) %>
</body>
</html>
