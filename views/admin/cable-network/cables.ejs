<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Portal do Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet">
    <link href="/css/admin-mobile.css" rel="stylesheet">
    <style>
        .cable-card { transition: transform 0.2s; }
        .cable-card:hover { transform: translateY(-2px); }
        .status-badge { font-size: 0.75rem; }
        .cable-icon { width: 40px; height: 40px; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-size: 1.2rem; }
        .cable-connected { background-color: #28a745; }
        .cable-disconnected { background-color: #dc3545; }
        .cable-maintenance { background-color: #ffc107; }
        .cable-damaged { background-color: #6f42c1; }
        .customer-info { background-color: #f8f9fa; border-radius: 8px; padding: 10px; }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/admin"><i class="bx bx-wifi"></i> Portal do Admin</a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/admin"><i class="bx bx-home"></i> Painel</a>
                <a class="nav-link" href="/admin/cable-network/odp"><i class="bx bx-broadcast"></i> Gerenciar ODP</a>
                <a class="nav-link active" href="/admin/cable-network/cables"><i class="bx bx-cable-car"></i> Rotas de Cabos</a>
                <a class="nav-link" href="/admin/billing/mapping"><i class="bx bx-map"></i> Visualização do Mapa</a>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2><i class="bx bx-cable-car"></i> Gerenciamento de Rotas de Cabos</h2>
                        <p class="text-muted">Gerencie as rotas de cabos do ODP aos clientes</p>
                    </div>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCableModal"><i class="bx bx-plus"></i> Adicionar Rota de Cabo</button>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white"><div class="card-body"><div class="d-flex justify-content-between"><div><h4><%= cableRoutes.length %></h4><p class="mb-0">Total de Cabos</p></div><div class="align-self-center"><i class="bx bx-cable-car fs-1"></i></div></div></div></div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white"><div class="card-body"><div class="d-flex justify-content-between"><div><h4><%= cableRoutes.filter(c => c.status === 'connected').length %></h4><p class="mb-0">Conectados</p></div><div class="align-self-center"><i class="bx bx-check-circle fs-1"></i></div></div></div></div>
            </div>
            <div class="col-md-3">
                <div class="card bg-danger text-white"><div class="card-body"><div class="d-flex justify-content-between"><div><h4><%= cableRoutes.filter(c => c.status === 'disconnected').length %></h4><p class="mb-0">Desconectados</p></div><div class="align-self-center"><i class="bx bx-x-circle fs-1"></i></div></div></div></div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white"><div class="card-body"><div class="d-flex justify-content-between"><div><h4><%= (cableRoutes.reduce((sum, c) => sum + (parseFloat(c.cable_length) || 0), 0) / 1000).toFixed(1) %> km</h4><p class="mb-0">Comprimento Total</p></div><div class="align-self-center"><i class="bx bx-ruler fs-1"></i></div></div></div></div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-12">
                <div class="card"><div class="card-body">
                    <div class="row">
                        <div class="col-md-3"><label class="form-label">Filtrar por Status</label><select class="form-select" id="statusFilter"><option value="">Todos os Status</option><option value="connected">Conectado</option><option value="disconnected">Desconectado</option><option value="maintenance">Manutenção</option><option value="damaged">Danificado</option></select></div>
                        <div class="col-md-3"><label class="form-label">Filtrar por ODP</label><select class="form-select" id="odpFilter"><option value="">Todos os ODPs</option><% odps.forEach(odp => { %><option value="<%= odp.id %>"><%= odp.name %></option><% }); %></select></div>
                        <div class="col-md-4"><label class="form-label">Buscar Cliente</label><input type="text" class="form-control" id="searchInput" placeholder="Buscar por nome ou telefone do cliente..."></div>
                        <div class="col-md-2"><label class="form-label">&nbsp;</label><button class="btn btn-outline-secondary w-100" onclick="clearFilters()"><i class="bx bx-x"></i> Limpar</button></div>
                    </div>
                </div></div>
            </div>
        </div>

        <div class="row" id="cableRoutesList">
            <% cableRoutes.forEach(cable => { %>
            <div class="col-md-6 col-lg-4 mb-4 cable-route-item" data-status="<%= cable.status %>" data-odp="<%= cable.odp_id %>" data-customer="<%= (cable.customer_name + ' ' + cable.customer_phone).toLowerCase() %>">
                <div class="card cable-card h-100" data-cable-id="<%= cable.id %>">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="d-flex align-items-center"><div class="cable-icon <%= 'cable-' + cable.status %>"><i class="bx bx-wifi"></i></div><div class="ms-3"><h6 class="mb-0">Rota de Cabo #<%= cable.id %></h6><small class="text-muted" data-field="cable_type"><%= cable.cable_type %></small></div></div>
                            <span class="badge <%= cable.status === 'connected' ? 'bg-success' : cable.status === 'disconnected' ? 'bg-danger' : cable.status === 'maintenance' ? 'bg-warning' : 'bg-secondary' %> status-badge" data-field="status"><%= cable.status.charAt(0).toUpperCase() + cable.status.slice(1) %></span>
                        </div>
                        <div class="customer-info mb-3"><small class="text-muted d-block">Cliente</small><h6 class="mb-1" data-field="customer_name"><%= cable.customer_name %></h6><small class="text-muted" data-field="customer_phone"><%= cable.customer_phone %></small></div>
                        <div class="mb-3"><small class="text-muted d-block">Conectado ao ODP</small><p class="mb-1"><%= cable.odp_name %> (<%= cable.odp_code %>)</p></div>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-sm btn-outline-primary" onclick="editCable(<%= cable.id %>)"><i class="bx bx-edit"></i> Editar</button>
                            <div class="btn-group">
                                <button class="btn btn-sm btn-outline-success" onclick="updateCableStatus(<%= cable.id %>, 'connected')"><i class="bx bx-check"></i></button>
                                <button class="btn btn-sm btn-outline-danger" onclick="updateCableStatus(<%= cable.id %>, 'disconnected')"><i class="bx bx-x"></i></button>
                                <button class="btn btn-sm btn-outline-warning" onclick="updateCableStatus(<%= cable.id %>, 'maintenance')"><i class="bx bx-wrench"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <% }); %>
        </div>
    </div>

    <!-- Modal Adicionar Rota de Cabo -->
    <div class="modal fade" id="addCableModal" tabindex="-1"><div class="modal-dialog modal-lg"><div class="modal-content">
        <div class="modal-header"><h5 class="modal-title">Adicionar Nova Rota de Cabo</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div>
        <form id="addCableForm">
            <div class="modal-body">
                <div class="row"><div class="col-md-6"><div class="mb-3"><label class="form-label">Cliente *</label><select class="form-select" name="customer_id" required><option value="">Selecione o Cliente</option><% customersWithoutCable.forEach(customer => { %><option value="<%= customer.id %>"><%= customer.name %> - <%= customer.phone %></option><% }); %></select></div></div><div class="col-md-6"><div class="mb-3"><label class="form-label">ODP *</label><select class="form-select" name="odp_id" required><option value="">Selecione o ODP</option><% odps.forEach(odp => { %><option value="<%= odp.id %>"><%= odp.name %> (<%= odp.used_ports %>/<%= odp.capacity %> portas usadas)</option><% }); %></select></div></div></div>
                <div class="row"><div class="col-md-6"><div class="mb-3"><label class="form-label">Comprimento do Cabo (metros)</label><input type="number" class="form-control" name="cable_length" step="0.01" placeholder="Preenchido automaticamente se vazio"></div></div><div class="col-md-6"><div class="mb-3"><label class="form-label">Número da Porta</label><input type="number" class="form-control" name="port_number" min="1"></div></div></div>
                <div class="row"><div class="col-md-6"><div class="mb-3"><label class="form-label">Tipo de Cabo</label><select class="form-select" name="cable_type"><option value="Fiber Optic">Fibra Óptica</option><option value="UTP">UTP</option><option value="Coaxial">Coaxial</option><option value="Wireless">Wireless</option></select></div></div><div class="col-md-6"><div class="mb-3"><label class="form-label">Data de Instalação</label><input type="date" class="form-control" name="installation_date"></div></div></div>
                <div class="mb-3"><label class="form-label">Notas</label><textarea class="form-control" name="notes" rows="2"></textarea></div>
            </div>
            <div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button><button type="submit" class="btn btn-primary">Adicionar Rota de Cabo</button></div>
        </form>
    </div></div></div>

    <!-- Modal Editar Rota de Cabo -->
    <div class="modal fade" id="editCableModal" tabindex="-1">...</div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('statusFilter').addEventListener('change', filterCables);
        document.getElementById('odpFilter').addEventListener('change', filterCables);
        document.getElementById('searchInput').addEventListener('input', filterCables);

        function filterCables() {
            const status = document.getElementById('statusFilter').value, odp = document.getElementById('odpFilter').value, search = document.getElementById('searchInput').value.toLowerCase();
            document.querySelectorAll('.cable-route-item').forEach(cable => {
                const statusMatch = !status || cable.dataset.status === status;
                const odpMatch = !odp || cable.dataset.odp === odp;
                const searchMatch = !search || cable.dataset.customer.includes(search);
                cable.style.display = statusMatch && odpMatch && searchMatch ? 'block' : 'none';
            });
        }
        function clearFilters() { document.getElementById('statusFilter').value = ''; document.getElementById('odpFilter').value = ''; document.getElementById('searchInput').value = ''; filterCables(); }

        document.getElementById('addCableForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const data = Object.fromEntries(new FormData(this));
            try {
                const response = await fetch('/admin/cable-network/cables', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) });
                const result = await response.json();
                if (result.success) {
                    showAlert('success', result.message);
                    bootstrap.Modal.getInstance(document.getElementById('addCableModal')).hide();
                    setTimeout(() => location.reload(), 1000);
                } else { showAlert('danger', result.message); }
            } catch (error) { showAlert('danger', 'Erro: ' + error.message); }
        });

        document.getElementById('editCableForm').addEventListener('submit', async function(e) { /* ... Lógica de Edição ... */ });

        async function updateCableStatus(id, status) {
            const notes = prompt(`Atualizar status para ${status}. Adicionar notas (opcional):`);
            try {
                const response = await fetch(`/admin/cable-network/cables/${id}/status`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ status, notes }) });
                const result = await response.json();
                if (result.success) { showAlert('success', result.message); setTimeout(() => location.reload(), 1000); }
                else { showAlert('danger', result.message); }
            } catch (error) { showAlert('danger', 'Erro: ' + error.message); }
        }

        function editCable(id) { /* ... Lógica de Edição ... */ }
        function assignCableToCustomer(customerId) { const modal = new bootstrap.Modal(document.getElementById('addCableModal')); document.querySelector('select[name="customer_id"]').value = customerId; modal.show(); }

        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.top = '20px'; alertDiv.style.right = '20px'; alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = `${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button>`;
            document.body.appendChild(alertDiv);
            setTimeout(() => alertDiv.remove(), 5000);
        }
    </script>
</body>
</html>
